@startuml
'https://plantuml.com/activity-diagram-beta

card Chat_Message {
    class chat_message {
        *mid int64
        cli_mid string
        sender int64
        receiver int64
        type int
        send_at int64
        content string
    }
    note top of offline_message:离线消息表, \n用户不在线则保存一份到这张表\n用户上线后拉取成功后移除消息

    class offline_message {
        *mid int64
        uid int64
        seq int64
    }
    note top of chat_message: 单聊消息记录全量保存

}
card Group_Message {
    class group_full_message {
        *mid int64
        cli_mid string
        gid int64
        from int64
        seq int64
        type int
        send_at time
        content string
    }
    note left of group_full_message:全量群消息记录

    class group_message_state {
        gid int64
        last_mid int64
        last_seq int64
        last_msg_at time
    }
    note left of group_message_state:群消息最新更新状态

    group_message_state -[hidden]- group_full_message

    class group_member_msg_state{

        mb_id int64
        gid int64
        uid int64
        device string
        last_ack_mid int64
        last_ack_seq int64
    }

    note left of group_member_msg_state:记录每个用户最后一次确认收到\n群消息的seq及id

    class group_msg_seq {
        gid int64
        seq int64
        step int64
    }

    group_message_state::last_mid --> group_full_message::mid
    group_msg_seq -[hidden]- group_member_msg_state
    note left of group_msg_seq:群消息自增序列, 使用号段模式\n每次内存中号段耗尽则取数据库
}

'note as Note_MID
'<b>消息ID的生成</b>
'|   时间戳    |    自旋ID    |   ID1  |   ID2     |   类型   |
'|   1  |   1   |  1   |  2   |
'end note

Chat_Message -[hidden]- Group_Message

@enduml
